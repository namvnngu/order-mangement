{"version":3,"sources":["pages/Home.tsx","actions/SearchOrders.tsx","constants/index.tsx","components/SearchBar.tsx","actions/CalendarOrders.tsx","components/Calendar.tsx","components/Total.tsx","actions/ListAllOrders.tsx","components/Table.tsx","components/Pagination.tsx","reducers/index.tsx","pages/Orders.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Home","className","role","aria-label","to","limit","goTo","keyword","loading","filterDate","a","Axios","get","URL","data","orders","type","payload","SearchBar","dispatch","useState","setKeyword","onSubmit","e","preventDefault","document","getElementById","value","action","SearchRequest","htmlFor","id","onChange","target","placeholder","startDate","endDate","Calendar","setStartDate","setEndDate","handleStartDate","CalendarRequest","name","onChangeCapture","Total","state","total","setTotal","useEffect","length","sum","reduce","prev","curr","totalAmount","axios","response","ListAll","Table","isAcsending","setIsAcsending","then","catch","err","console","log","SearchOrders","CalendarOrders","scope","style","cursor","onClick","map","order","index","key","fontWeight","orderName","customerCompany","customerName","moment","orderDate","format","deliveredAmount","Pagination","currentPage","max","setMax","goToValue","setGoTo","fethedData","Number","dispatchNumber","min","readOnly","goToNumber","dispatchedNumber","reducers","initialState","totalPrice","totalOrders","Orders","useReducer","globalState","href","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.23ef13fe.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n  return (\n    <div className=\"home-container\">\n      <h1>\n        Welcome to order management{\" \"}\n        <span role=\"img\" aria-label=\"package\">\n          ðŸ“¦\n        </span>\n      </h1>\n      <div>\n        <Link to=\"/orders\">Click here</Link> to view the order page\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import Axios from \"axios\";\nimport { Order } from \"../interface/order\";\nimport { KEYWORD_SEARCH_ACTION, SEARCH_REQUEST_ACTION } from \"../constants\";\nimport { URL } from \"../App\";\n\nasync function SearchOrders(\n  limit: number,\n  goTo: number,\n  keyword: string,\n  loading: boolean,\n  filterDate: string\n) {\n  loading = true;\n  const { data } = await Axios.get(\n    URL +\n      `/api/orders/search?page=${goTo}&limit=${limit}&method=${filterDate}&keyword=${keyword}`\n  );\n  const orders: Order[] = data;\n  loading = false;\n  return { type: KEYWORD_SEARCH_ACTION, payload: { orders, loading } };\n}\n\nfunction SearchRequest(keyword: string) {\n  let loading = true;\n  return { type: SEARCH_REQUEST_ACTION, payload: { keyword, loading } };\n}\n\nexport { SearchOrders, SearchRequest };\n","// List Modfication\nexport const LIMIT_ACTION = \"LIMIT_ACTION\";\nexport const GO_TO_ACTION = \"GO_TO_ACTION\";\nexport const KEYWORD_SEARCH_ACTION = \"KEYWORD_SEARCH_ACTION\";\nexport const SEARCH_REQUEST_ACTION = \"SEARCH_REQUEST_ACTION\";\nexport const DATE_REQUEST_ACTION = \"DATE_REQUEST_ACTION\";\nexport const DATE_SUCCESS_ACTION = \"DATE_SUCCESS_ACTION\";\n\n// Order List\nexport const LIST_ORDER_SUCCUESS = \"LIST_ORDER_SUCCESS\";\n","import React, { Dispatch, useState } from \"react\";\nimport { GoSearch } from \"react-icons/go\";\nimport { Actions } from \"../interface/actions\";\nimport { SearchRequest } from \"../actions/SearchOrders\";\nimport { SEARCH_REQUEST_ACTION } from \"../constants\";\n\ninterface Props {\n  dispatch: Dispatch<Actions>;\n}\n\nconst SearchBar: React.FC<Props> = ({ dispatch }) => {\n  const [keyword, setKeyword] = useState(\"\");\n  function hanldeOnChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setKeyword(e.target.value);\n  }\n  function handleSubmit(e: React.ChangeEvent<HTMLFormElement>) {\n    e.preventDefault();\n    let input = document.getElementById(\"keyword\") as HTMLInputElement;\n    input.value = \"\";\n    const action = SearchRequest(keyword);\n    dispatch({ type: SEARCH_REQUEST_ACTION, payload: action.payload });\n  }\n  return (\n    <form className=\"search-container form-group row\" onSubmit={handleSubmit}>\n      <label htmlFor=\"search\" className=\"search-field col-form-label\">\n        <GoSearch className=\"search-icon\" />\n        Search\n      </label>\n      <input\n        id=\"keyword\"\n        type=\"text\"\n        onChange={hanldeOnChange}\n        className=\"form-control col-sm-9\"\n        placeholder=\"Enter keywords to find your orders\"\n      />\n    </form>\n  );\n};\n\nexport default SearchBar;\n","import { DATE_REQUEST_ACTION, DATE_SUCCESS_ACTION } from \"../constants\";\nimport Axios from \"axios\";\nimport { Order } from \"../interface/order\";\nimport { URL } from \"../App\";\n\nfunction CalendarRequest(startDate: string, endDate: string) {\n  let loading = true;\n  return {\n    type: DATE_REQUEST_ACTION,\n    payload: { startDate, endDate, loading },\n  };\n}\n\nasync function CalendarOrders(\n  limit: number,\n  goTo: number,\n  loading: boolean,\n  filterDate: string,\n  startDate: string,\n  endDate: string\n) {\n  loading = true;\n  const { data } = await Axios.get(\n    URL +\n      `/api/orders/date?page=${goTo}&limit=${limit}&method=${filterDate}&from=${startDate}&to=${endDate}`\n  );\n  const orders: Order[] = data;\n  loading = false;\n  return { type: DATE_SUCCESS_ACTION, payload: { orders, loading } };\n}\n\nexport { CalendarRequest, CalendarOrders };\n","import React, { useState, Dispatch } from \"react\";\nimport { CalendarRequest } from \"../actions/CalendarOrders\";\nimport { Actions } from \"../interface/actions\";\nimport { DATE_REQUEST_ACTION } from \"../constants\";\n\ninterface Props {\n  dispatch: Dispatch<Actions>;\n}\nconst Calendar: React.FC<Props> = ({ dispatch }) => {\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  function handleStartDate(e: React.ChangeEvent<HTMLInputElement>) {\n    setStartDate(e.target.value);\n  }\n  function handleEndDate(e: React.ChangeEvent<HTMLInputElement>) {\n    setEndDate(e.target.value);\n  }\n  function handleSubmit(e: React.ChangeEvent<HTMLFormElement>) {\n    e.preventDefault();\n    if (startDate !== \"\" && endDate !== \"\") {\n      const action = CalendarRequest(startDate, endDate);\n      dispatch({ type: DATE_REQUEST_ACTION, payload: action.payload });\n    }\n  }\n  return (\n    <div className=\"calendar\">\n      <div>\n        <b>Created date</b>\n        <div className=\"calendar-container\">\n          <form action=\"\" onSubmit={handleSubmit}>\n            <input\n              value={startDate}\n              type=\"date\"\n              name=\"startDate\"\n              id=\"startDate\"\n              onChange={handleStartDate}\n              onChangeCapture={handleStartDate}\n            />\n            <input\n              value={endDate}\n              type=\"date\"\n              name=\"endDate\"\n              id=\"endDate\"\n              onChange={handleEndDate}\n            />\n            <button className=\"submit-button\">Submit Date</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Calendar;\n","import React, { useState, useEffect } from \"react\";\nimport GlobalTye from \"../interface/global\";\n\ninterface Props {\n  state: GlobalTye;\n}\nconst Total: React.FC<Props> = ({ state }) => {\n  const [total, setTotal] = useState(0);\n  const { orders } = state;\n  useEffect(() => {\n    if (orders.length !== 0) {\n      let sum = orders!.reduce((prev, curr) => prev + curr.totalAmount, 0);\n      setTotal(sum);\n    } else {\n      setTotal(0);\n    }\n  }, [total, orders]);\n  return (\n    <div className=\"total\">\n      Total: <span> ${total}</span>\n    </div>\n  );\n};\nexport default Total;\n","import axios from \"axios\";\nimport { URL } from \"../App\";\nimport { Order } from \"../interface/order\";\nimport { LIST_ORDER_SUCCUESS } from \"../constants\";\n\nasync function ListAll(\n  limit: number,\n  goTo: number,\n  loading: boolean,\n  filterDate: string\n) {\n  loading = true;\n  const response = await axios.get(\n    URL + `/api/orders/filter?page=${goTo}&limit=${limit}&method=${filterDate}`\n  );\n  const orders: Order[] = response.data;\n  loading = false;\n  return { type: LIST_ORDER_SUCCUESS, payload: { orders, loading } };\n}\n\nexport default ListAll;\n","import React, { useEffect, Dispatch, useState } from \"react\";\n// import { Order } from \"../interface/order\";\nimport GlobalTye from \"../interface/global\";\nimport { Actions } from \"../interface/actions\";\nimport ListAll from \"../actions/ListAllOrders\";\nimport { IoIosArrowDown, IoIosArrowUp } from \"react-icons/io\";\nimport { SearchOrders } from \"../actions/SearchOrders\";\nimport {\n  KEYWORD_SEARCH_ACTION,\n  DATE_SUCCESS_ACTION,\n  LIST_ORDER_SUCCUESS,\n} from \"../constants\";\nimport moment from \"moment\";\nimport { CalendarOrders } from \"../actions/CalendarOrders\";\n\ninterface Props {\n  state: GlobalTye;\n  dispatch: Dispatch<Actions>;\n}\n\nconst Table: React.FC<Props> = ({ state, dispatch }) => {\n  const { orders, limit, loading, goTo, startDate, endDate, keyword } = state;\n  const [isAcsending, setIsAcsending] = useState(false);\n\n  useEffect(() => {\n    if (keyword === \"\" && startDate === \"\" && endDate === \"\") {\n      const filterDate: string = isAcsending ? \"ascending\" : \"\";\n      ListAll(limit, goTo, loading, filterDate)\n        .then((action) => {\n          dispatch({ type: LIST_ORDER_SUCCUESS, payload: action.payload });\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [limit, dispatch, loading, goTo, isAcsending]);\n\n  useEffect(() => {\n    const filterDate: string = isAcsending ? \"ascending\" : \"\";\n    if (keyword !== \"\") {\n      SearchOrders(limit, goTo, keyword, loading, filterDate)\n        .then((action) => {\n          dispatch({ type: KEYWORD_SEARCH_ACTION, payload: action.payload });\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [keyword, limit, loading, goTo, isAcsending, dispatch]);\n\n  useEffect(() => {\n    const filterDate: string = isAcsending ? \"ascending\" : \"\";\n    if (startDate !== \"\" && endDate !== \"\") {\n      CalendarOrders(limit, goTo, loading, filterDate, startDate, endDate)\n        .then((action) => {\n          dispatch({ type: DATE_SUCCESS_ACTION, payload: action.payload });\n        })\n        .catch((err) => console.log(err));\n    }\n  }, [limit, loading, goTo, isAcsending, dispatch, startDate, endDate]);\n  return (\n    <div className=\"table-container\">\n      {state.loading ? (\n        <div className=\"loader\"></div>\n      ) : (\n        <>\n          <table className=\"table table-hover\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Order Name</th>\n                <th scope=\"col\">Customer Company</th>\n                <th scope=\"col\">Customer Name</th>\n                <th\n                  scope=\"col\"\n                  style={{ cursor: \"pointer\" }}\n                  onClick={() => setIsAcsending(!isAcsending)}\n                >\n                  Order Date{\" \"}\n                  {isAcsending ? (\n                    <IoIosArrowUp className=\"pagination-icon\" />\n                  ) : (\n                    <IoIosArrowDown className=\"pagination-icon\" />\n                  )}\n                </th>\n                <th scope=\"col\">Delivered Amount</th>\n                <th scope=\"col\">Total Amount</th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order, index) => {\n                return (\n                  <tr key={index}>\n                    <td>\n                      <div style={{ fontWeight: \"bold\" }}>\n                        {order.orderName}\n                      </div>\n                    </td>\n                    <td>{order.customerCompany}</td>\n                    <td>{order.customerName}</td>\n                    <td>{moment(order.orderDate).format(\"MMM Do, LT\")}</td>\n                    <td>\n                      {order.deliveredAmount === 0\n                        ? \"--\"\n                        : order.deliveredAmount}\n                    </td>\n                    <td>{order.totalAmount}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { Dispatch, useState, useEffect } from \"react\";\nimport { IoIosArrowBack, IoIosArrowForward } from \"react-icons/io\";\nimport { Actions } from \"../interface/actions\";\nimport { LIMIT_ACTION, GO_TO_ACTION } from \"../constants\";\nimport GlobalTye from \"../interface/global\";\nimport Axios from \"axios\";\nimport { URL } from \"../App\";\n\ninterface Props {\n  state: GlobalTye;\n  dispatch: Dispatch<Actions>;\n}\n\nconst Pagination: React.FC<Props> = ({ state, dispatch }) => {\n  const { orders, goTo, currentPage, limit } = state;\n  const [max, setMax] = useState(0);\n  const [goToValue, setGoTo] = useState(1);\n\n  useEffect(() => {\n    const fethedData = async () => {\n      const { data } = await Axios.get(URL + \"/api/orders\");\n      setMax(data.length);\n    };\n    fethedData();\n  }, []);\n\n  function handleGoTo(e: React.ChangeEvent<HTMLInputElement>) {\n    const goToNumber: number = Number(e.target.value);\n    let dispatchedNumber: number = 1;\n    if (goToNumber < 0) {\n      dispatchedNumber = 1;\n    } else if (goToNumber > max / limit) {\n      dispatchedNumber = goTo;\n    } else {\n      dispatchedNumber = goToNumber;\n    }\n    setGoTo(dispatchedNumber);\n    dispatch({\n      type: GO_TO_ACTION,\n      payload: dispatchedNumber,\n    });\n  }\n\n  function handleBackward() {\n    let dispatchNumber: number = 1;\n    if (currentPage - 1 < 1) {\n      dispatchNumber = 1;\n    } else {\n      dispatchNumber = currentPage - 1;\n    }\n    setGoTo(dispatchNumber);\n    dispatch({\n      type: GO_TO_ACTION,\n      payload: dispatchNumber,\n    });\n  }\n  function handleForward() {\n    let dispatchNumber: number = 1;\n    if (currentPage + 1 > max / limit) {\n      dispatchNumber = currentPage;\n    } else {\n      dispatchNumber = currentPage + 1;\n    }\n    setGoTo(dispatchNumber);\n    dispatch({\n      type: GO_TO_ACTION,\n      payload: dispatchNumber,\n    });\n  }\n  return (\n    <div className=\"pagination-container\">\n      <span className=\"total-order\">Total {orders.length}</span>\n      <select\n        name=\"limit\"\n        id=\"limit\"\n        onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n          dispatch({ type: LIMIT_ACTION, payload: Number(e.target.value) })\n        }\n      >\n        <option value={5}>5/page</option>\n        <option value={15}>15/page</option>\n        <option value={25}>25/page</option>\n      </select>\n      <span className=\"current-page\">\n        <IoIosArrowBack className=\"pagination-icon\" onClick={handleBackward} />\n        <input\n          type=\"number\"\n          min=\"1\"\n          value={currentPage === 0 ? \"\" : currentPage}\n          readOnly\n        />\n        <IoIosArrowForward\n          className=\"pagination-icon\"\n          onClick={handleForward}\n        />\n      </span>\n      <span className=\"go-to\">Go to</span>\n      <input\n        type=\"number\"\n        name=\"goTo\"\n        id=\"goTo\"\n        value={goToValue === 0 ? \"\" : goToValue}\n        onChange={handleGoTo}\n      />\n    </div>\n  );\n};\n\nexport default Pagination;\n","import GlobalTye from \"../interface/global\";\nimport { Actions } from \"../interface/actions\";\nimport {\n  LIMIT_ACTION,\n  GO_TO_ACTION,\n  KEYWORD_SEARCH_ACTION,\n  LIST_ORDER_SUCCUESS,\n  SEARCH_REQUEST_ACTION,\n  DATE_REQUEST_ACTION,\n  DATE_SUCCESS_ACTION,\n} from \"../constants\";\n\nfunction reducers(state: GlobalTye, action: Actions) {\n  switch (action.type) {\n    case LIMIT_ACTION:\n      return { ...state, limit: action.payload };\n    case GO_TO_ACTION:\n      return { ...state, goTo: action.payload, currentPage: action.payload };\n    case SEARCH_REQUEST_ACTION:\n      return { ...state, ...action.payload };\n    case KEYWORD_SEARCH_ACTION:\n      return {\n        ...state,\n        orders: action.payload.orders,\n        loading: action.payload.loading,\n      };\n    case DATE_REQUEST_ACTION:\n      return {\n        ...state,\n        ...action.payload,\n      };\n\n    case DATE_SUCCESS_ACTION:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case LIST_ORDER_SUCCUESS:\n      return {\n        ...state,\n        loading: action.payload.loading,\n        orders: action.payload.orders,\n      };\n    default:\n      return state;\n  }\n}\nexport default reducers;\n","import React, { useReducer } from \"react\";\nimport SearchBar from \"../components/SearchBar\";\nimport Calendar from \"../components/Calendar\";\nimport Total from \"../components/Total\";\nimport Table from \"../components/Table\";\nimport Pagination from \"../components/Pagination\";\nimport reducers from \"../reducers\";\nimport GlobalTye from \"../interface/global\";\n\nconst initialState: GlobalTye = {\n  loading: true,\n  startDate: \"\",\n  endDate: \"\",\n  keyword: \"\",\n  totalPrice: 0,\n  totalOrders: 0,\n  limit: 5,\n  currentPage: 1,\n  goTo: 1,\n  orders: [],\n};\nconst Orders = () => {\n  const [globalState, dispatch] = useReducer(reducers, initialState);\n  console.log(globalState.startDate, globalState.endDate);\n  return (\n    <div className=\"container orders\">\n      <SearchBar dispatch={dispatch} />\n      <Calendar dispatch={dispatch} />\n      <Total state={globalState} />\n      <a href=\"/orders\" className=\"refresh-button\">\n        REFRESH\n      </a>\n      <Table state={globalState} dispatch={dispatch} />\n      <Pagination state={globalState} dispatch={dispatch} />\n    </div>\n  );\n};\n\nexport default Orders;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Orders from \"./pages/Orders\";\n\nconst URL = \"https://order-managment.herokuapp.com\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/orders\" component={Orders} />\n      </Switch>\n    </div>\n  );\n}\n\nexport { URL };\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}